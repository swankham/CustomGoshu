//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Erp.Custom.Core.Session.Epicor.ReqSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdExtReqTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqHeadListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqHeadListTableset : Erp.Custom.Core.Session.Epicor.ReqSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListTable ReqHeadListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListTable ReqHeadList {
            get {
                return this.ReqHeadListField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqHeadListField, value) != true)) {
                    this.ReqHeadListField = value;
                    this.RaisePropertyChanged("ReqHeadList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtReqTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtReqTableset : Erp.Custom.Core.Session.Epicor.ReqSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailTable ReqDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailAttchTable ReqDetailAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadTable ReqHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadAttchTable ReqHeadAttchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailTable ReqDetail {
            get {
                return this.ReqDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqDetailField, value) != true)) {
                    this.ReqDetailField = value;
                    this.RaisePropertyChanged("ReqDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailAttchTable ReqDetailAttch {
            get {
                return this.ReqDetailAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqDetailAttchField, value) != true)) {
                    this.ReqDetailAttchField = value;
                    this.RaisePropertyChanged("ReqDetailAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadTable ReqHead {
            get {
                return this.ReqHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqHeadField, value) != true)) {
                    this.ReqHeadField = value;
                    this.RaisePropertyChanged("ReqHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadAttchTable ReqHeadAttch {
            get {
                return this.ReqHeadAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqHeadAttchField, value) != true)) {
                    this.ReqHeadAttchField = value;
                    this.RaisePropertyChanged("ReqHeadAttch");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqLogTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqLogTableset : Erp.Custom.Core.Session.Epicor.ReqSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogTable ReqLogField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogTable ReqLog {
            get {
                return this.ReqLogField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqLogField, value) != true)) {
                    this.ReqLogField = value;
                    this.RaisePropertyChanged("ReqLog");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : Erp.Custom.Core.Session.Epicor.ReqSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqTableset : Erp.Custom.Core.Session.Epicor.ReqSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailTable ReqDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailAttchTable ReqDetailAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadTable ReqHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadAttchTable ReqHeadAttchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailTable ReqDetail {
            get {
                return this.ReqDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqDetailField, value) != true)) {
                    this.ReqDetailField = value;
                    this.RaisePropertyChanged("ReqDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailAttchTable ReqDetailAttch {
            get {
                return this.ReqDetailAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqDetailAttchField, value) != true)) {
                    this.ReqDetailAttchField = value;
                    this.RaisePropertyChanged("ReqDetailAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadTable ReqHead {
            get {
                return this.ReqHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqHeadField, value) != true)) {
                    this.ReqHeadField = value;
                    this.RaisePropertyChanged("ReqHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadAttchTable ReqHeadAttch {
            get {
                return this.ReqHeadAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqHeadAttchField, value) != true)) {
                    this.ReqHeadAttchField = value;
                    this.RaisePropertyChanged("ReqHeadAttch");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReqDetailTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReqDetailRow")]
    [System.SerializableAttribute()]
    public class ReqDetailTable : System.Collections.Generic.List<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReqDetailAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReqDetailAttchRow")]
    [System.SerializableAttribute()]
    public class ReqDetailAttchTable : System.Collections.Generic.List<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReqHeadTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReqHeadRow")]
    [System.SerializableAttribute()]
    public class ReqHeadTable : System.Collections.Generic.List<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReqHeadAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReqHeadAttchRow")]
    [System.SerializableAttribute()]
    public class ReqHeadAttchTable : System.Collections.Generic.List<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReqHeadListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReqHeadListRow")]
    [System.SerializableAttribute()]
    public class ReqHeadListTable : System.Collections.Generic.List<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqHeadListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqHeadListRow : Erp.Custom.Core.Session.Epicor.ReqSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDispatcherCurMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDispatcherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDispatcherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqActionIDReqActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestorIDCurMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestorIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDispatcherCurMenuID {
            get {
                return this.CurrDispatcherCurMenuIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDispatcherCurMenuIDField, value) != true)) {
                    this.CurrDispatcherCurMenuIDField = value;
                    this.RaisePropertyChanged("CurrDispatcherCurMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDispatcherID {
            get {
                return this.CurrDispatcherIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDispatcherIDField, value) != true)) {
                    this.CurrDispatcherIDField = value;
                    this.RaisePropertyChanged("CurrDispatcherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDispatcherName {
            get {
                return this.CurrDispatcherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDispatcherNameField, value) != true)) {
                    this.CurrDispatcherNameField = value;
                    this.RaisePropertyChanged("CurrDispatcherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenReq {
            get {
                return this.OpenReqField;
            }
            set {
                if ((this.OpenReqField.Equals(value) != true)) {
                    this.OpenReqField = value;
                    this.RaisePropertyChanged("OpenReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqActionID {
            get {
                return this.ReqActionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqActionIDField, value) != true)) {
                    this.ReqActionIDField = value;
                    this.RaisePropertyChanged("ReqActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqActionIDReqActionDesc {
            get {
                return this.ReqActionIDReqActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqActionIDReqActionDescField, value) != true)) {
                    this.ReqActionIDReqActionDescField = value;
                    this.RaisePropertyChanged("ReqActionIDReqActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNum {
            get {
                return this.ReqNumField;
            }
            set {
                if ((this.ReqNumField.Equals(value) != true)) {
                    this.ReqNumField = value;
                    this.RaisePropertyChanged("ReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestorID {
            get {
                return this.RequestorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestorIDField, value) != true)) {
                    this.RequestorIDField = value;
                    this.RaisePropertyChanged("RequestorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestorIDCurMenuID {
            get {
                return this.RequestorIDCurMenuIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestorIDCurMenuIDField, value) != true)) {
                    this.RequestorIDCurMenuIDField = value;
                    this.RaisePropertyChanged("RequestorIDCurMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestorIDName {
            get {
                return this.RequestorIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestorIDNameField, value) != true)) {
                    this.RequestorIDNameField = value;
                    this.RaisePropertyChanged("RequestorIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDesc {
            get {
                return this.StatusDescField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescField, value) != true)) {
                    this.StatusDescField = value;
                    this.RaisePropertyChanged("StatusDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusType {
            get {
                return this.StatusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeField, value) != true)) {
                    this.StatusTypeField = value;
                    this.RaisePropertyChanged("StatusType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqDetailAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListRow))]
    public partial class IceRow : Erp.Custom.Core.Session.Epicor.ReqSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqDetailRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqDetailRow : Erp.Custom.Core.Session.Epicor.ReqSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostPerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbReqLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNonMasterPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobSeqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MfgNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgNumMfgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLinePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineVenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONUMShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONUMShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostInvtyWipCosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrcConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PurchasingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchasingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RcvInspectionReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReqDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqNumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqNumShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UOMOverrideSPLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VendorInactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VendorPayHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal XOrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vrClassDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseDisplaySymbol {
            get {
                return this.BaseDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseDisplaySymbolField, value) != true)) {
                    this.BaseDisplaySymbolField = value;
                    this.RaisePropertyChanged("BaseDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Class {
            get {
                return this.ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassField, value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassDescription {
            get {
                return this.ClassDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassDescriptionField, value) != true)) {
                    this.ClassDescriptionField = value;
                    this.RaisePropertyChanged("ClassDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostPerCode {
            get {
                return this.CostPerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CostPerCodeField, value) != true)) {
                    this.CostPerCodeField = value;
                    this.RaisePropertyChanged("CostPerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrDesc {
            get {
                return this.CurrencyCodeCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrDescField, value) != true)) {
                    this.CurrencyCodeCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrName {
            get {
                return this.CurrencyCodeCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrNameField, value) != true)) {
                    this.CurrencyCodeCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrSymbol {
            get {
                return this.CurrencyCodeCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrSymbolField, value) != true)) {
                    this.CurrencyCodeCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrencyID {
            get {
                return this.CurrencyCodeCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrencyIDField, value) != true)) {
                    this.CurrencyCodeCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeDocumentDesc {
            get {
                return this.CurrencyCodeDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeDocumentDescField, value) != true)) {
                    this.CurrencyCodeDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocExtCost {
            get {
                return this.DocExtCostField;
            }
            set {
                if ((this.DocExtCostField.Equals(value) != true)) {
                    this.DocExtCostField = value;
                    this.RaisePropertyChanged("DocExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnitCost {
            get {
                return this.DocUnitCostField;
            }
            set {
                if ((this.DocUnitCostField.Equals(value) != true)) {
                    this.DocUnitCostField = value;
                    this.RaisePropertyChanged("DocUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtCost {
            get {
                return this.ExtCostField;
            }
            set {
                if ((this.ExtCostField.Equals(value) != true)) {
                    this.ExtCostField = value;
                    this.RaisePropertyChanged("ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbReqLine {
            get {
                return this.GlbReqLineField;
            }
            set {
                if ((this.GlbReqLineField.Equals(value) != true)) {
                    this.GlbReqLineField = value;
                    this.RaisePropertyChanged("GlbReqLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbReqNum {
            get {
                return this.GlbReqNumField;
            }
            set {
                if ((this.GlbReqNumField.Equals(value) != true)) {
                    this.GlbReqNumField = value;
                    this.RaisePropertyChanged("GlbReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNonMasterPart {
            get {
                return this.IsNonMasterPartField;
            }
            set {
                if ((this.IsNonMasterPartField.Equals(value) != true)) {
                    this.IsNonMasterPartField = value;
                    this.RaisePropertyChanged("IsNonMasterPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNumPartDescription {
            get {
                return this.JobNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumPartDescriptionField, value) != true)) {
                    this.JobNumPartDescriptionField = value;
                    this.RaisePropertyChanged("JobNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobSeqType {
            get {
                return this.JobSeqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JobSeqTypeField, value) != true)) {
                    this.JobSeqTypeField = value;
                    this.RaisePropertyChanged("JobSeqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeadTime {
            get {
                return this.LeadTimeField;
            }
            set {
                if ((this.LeadTimeField.Equals(value) != true)) {
                    this.LeadTimeField = value;
                    this.RaisePropertyChanged("LeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockRate {
            get {
                return this.LockRateField;
            }
            set {
                if ((this.LockRateField.Equals(value) != true)) {
                    this.LockRateField = value;
                    this.RaisePropertyChanged("LockRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MfgNum {
            get {
                return this.MfgNumField;
            }
            set {
                if ((this.MfgNumField.Equals(value) != true)) {
                    this.MfgNumField = value;
                    this.RaisePropertyChanged("MfgNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgNumMfgID {
            get {
                return this.MfgNumMfgIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgNumMfgIDField, value) != true)) {
                    this.MfgNumMfgIDField = value;
                    this.RaisePropertyChanged("MfgNumMfgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgNumName {
            get {
                return this.MfgNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgNumNameField, value) != true)) {
                    this.MfgNumNameField = value;
                    this.RaisePropertyChanged("MfgNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgPartNum {
            get {
                return this.MfgPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgPartNumField, value) != true)) {
                    this.MfgPartNumField = value;
                    this.RaisePropertyChanged("MfgPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinOrderQty {
            get {
                return this.MinOrderQtyField;
            }
            set {
                if ((this.MinOrderQtyField.Equals(value) != true)) {
                    this.MinOrderQtyField = value;
                    this.RaisePropertyChanged("MinOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenLine {
            get {
                return this.OpenLineField;
            }
            set {
                if ((this.OpenLineField.Equals(value) != true)) {
                    this.OpenLineField = value;
                    this.RaisePropertyChanged("OpenLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineLineDesc {
            get {
                return this.POLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineLineDescField, value) != true)) {
                    this.POLineLineDescField = value;
                    this.RaisePropertyChanged("POLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLinePartNum {
            get {
                return this.POLinePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLinePartNumField, value) != true)) {
                    this.POLinePartNumField = value;
                    this.RaisePropertyChanged("POLinePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineVenPartNum {
            get {
                return this.POLineVenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineVenPartNumField, value) != true)) {
                    this.POLineVenPartNumField = value;
                    this.RaisePropertyChanged("POLineVenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONUM {
            get {
                return this.PONUMField;
            }
            set {
                if ((this.PONUMField.Equals(value) != true)) {
                    this.PONUMField = value;
                    this.RaisePropertyChanged("PONUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONUMShipName {
            get {
                return this.PONUMShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONUMShipNameField, value) != true)) {
                    this.PONUMShipNameField = value;
                    this.RaisePropertyChanged("PONUMShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONUMShipToConName {
            get {
                return this.PONUMShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONUMShipToConNameField, value) != true)) {
                    this.PONUMShipToConNameField = value;
                    this.RaisePropertyChanged("PONUMShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPUM {
            get {
                return this.PartPUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPUMField, value) != true)) {
                    this.PartPUMField = value;
                    this.RaisePropertyChanged("PartPUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PostInvtyWipCos {
            get {
                return this.PostInvtyWipCosField;
            }
            set {
                if ((this.PostInvtyWipCosField.Equals(value) != true)) {
                    this.PostInvtyWipCosField = value;
                    this.RaisePropertyChanged("PostInvtyWipCos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrcConNum {
            get {
                return this.PrcConNumField;
            }
            set {
                if ((this.PrcConNumField.Equals(value) != true)) {
                    this.PrcConNumField = value;
                    this.RaisePropertyChanged("PrcConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PurchasingFactor {
            get {
                return this.PurchasingFactorField;
            }
            set {
                if ((this.PurchasingFactorField.Equals(value) != true)) {
                    this.PurchasingFactorField = value;
                    this.RaisePropertyChanged("PurchasingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchasingFactorDirection {
            get {
                return this.PurchasingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchasingFactorDirectionField, value) != true)) {
                    this.PurchasingFactorDirectionField = value;
                    this.RaisePropertyChanged("PurchasingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RUM {
            get {
                return this.RUMField;
            }
            set {
                if ((object.ReferenceEquals(this.RUMField, value) != true)) {
                    this.RUMField = value;
                    this.RaisePropertyChanged("RUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpDescription {
            get {
                return this.RateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpDescriptionField, value) != true)) {
                    this.RateGrpDescriptionField = value;
                    this.RaisePropertyChanged("RateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RcvInspectionReq {
            get {
                return this.RcvInspectionReqField;
            }
            set {
                if ((this.RcvInspectionReqField.Equals(value) != true)) {
                    this.RcvInspectionReqField = value;
                    this.RaisePropertyChanged("RcvInspectionReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReqDate {
            get {
                return this.ReqDateField;
            }
            set {
                if ((this.ReqDateField.Equals(value) != true)) {
                    this.ReqDateField = value;
                    this.RaisePropertyChanged("ReqDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqLine {
            get {
                return this.ReqLineField;
            }
            set {
                if ((this.ReqLineField.Equals(value) != true)) {
                    this.ReqLineField = value;
                    this.RaisePropertyChanged("ReqLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNum {
            get {
                return this.ReqNumField;
            }
            set {
                if ((this.ReqNumField.Equals(value) != true)) {
                    this.ReqNumField = value;
                    this.RaisePropertyChanged("ReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqNumShipName {
            get {
                return this.ReqNumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqNumShipNameField, value) != true)) {
                    this.ReqNumShipNameField = value;
                    this.RaisePropertyChanged("ReqNumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqNumShipToConName {
            get {
                return this.ReqNumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqNumShipToConNameField, value) != true)) {
                    this.ReqNumShipToConNameField = value;
                    this.RaisePropertyChanged("ReqNumShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ExtCost {
            get {
                return this.Rpt1ExtCostField;
            }
            set {
                if ((this.Rpt1ExtCostField.Equals(value) != true)) {
                    this.Rpt1ExtCostField = value;
                    this.RaisePropertyChanged("Rpt1ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnitCost {
            get {
                return this.Rpt1UnitCostField;
            }
            set {
                if ((this.Rpt1UnitCostField.Equals(value) != true)) {
                    this.Rpt1UnitCostField = value;
                    this.RaisePropertyChanged("Rpt1UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ExtCost {
            get {
                return this.Rpt2ExtCostField;
            }
            set {
                if ((this.Rpt2ExtCostField.Equals(value) != true)) {
                    this.Rpt2ExtCostField = value;
                    this.RaisePropertyChanged("Rpt2ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnitCost {
            get {
                return this.Rpt2UnitCostField;
            }
            set {
                if ((this.Rpt2UnitCostField.Equals(value) != true)) {
                    this.Rpt2UnitCostField = value;
                    this.RaisePropertyChanged("Rpt2UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ExtCost {
            get {
                return this.Rpt3ExtCostField;
            }
            set {
                if ((this.Rpt3ExtCostField.Equals(value) != true)) {
                    this.Rpt3ExtCostField = value;
                    this.RaisePropertyChanged("Rpt3ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnitCost {
            get {
                return this.Rpt3UnitCostField;
            }
            set {
                if ((this.Rpt3UnitCostField.Equals(value) != true)) {
                    this.Rpt3UnitCostField = value;
                    this.RaisePropertyChanged("Rpt3UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranType {
            get {
                return this.TranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TranTypeField, value) != true)) {
                    this.TranTypeField = value;
                    this.RaisePropertyChanged("TranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UOMOverrideSPL {
            get {
                return this.UOMOverrideSPLField;
            }
            set {
                if ((this.UOMOverrideSPLField.Equals(value) != true)) {
                    this.UOMOverrideSPLField = value;
                    this.RaisePropertyChanged("UOMOverrideSPL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitCost {
            get {
                return this.UnitCostField;
            }
            set {
                if ((this.UnitCostField.Equals(value) != true)) {
                    this.UnitCostField = value;
                    this.RaisePropertyChanged("UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VenPartNum {
            get {
                return this.VenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VenPartNumField, value) != true)) {
                    this.VenPartNumField = value;
                    this.RaisePropertyChanged("VenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VendorInactive {
            get {
                return this.VendorInactiveField;
            }
            set {
                if ((this.VendorInactiveField.Equals(value) != true)) {
                    this.VendorInactiveField = value;
                    this.RaisePropertyChanged("VendorInactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VendorPayHold {
            get {
                return this.VendorPayHoldField;
            }
            set {
                if ((this.VendorPayHoldField.Equals(value) != true)) {
                    this.VendorPayHoldField = value;
                    this.RaisePropertyChanged("VendorPayHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal XOrderQty {
            get {
                return this.XOrderQtyField;
            }
            set {
                if ((this.XOrderQtyField.Equals(value) != true)) {
                    this.XOrderQtyField = value;
                    this.RaisePropertyChanged("XOrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vrClassDescription {
            get {
                return this.vrClassDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.vrClassDescriptionField, value) != true)) {
                    this.vrClassDescriptionField = value;
                    this.RaisePropertyChanged("vrClassDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqDetailAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqDetailAttchRow : Erp.Custom.Core.Session.Epicor.ReqSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqLine {
            get {
                return this.ReqLineField;
            }
            set {
                if ((this.ReqLineField.Equals(value) != true)) {
                    this.ReqLineField = value;
                    this.RaisePropertyChanged("ReqLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNum {
            get {
                return this.ReqNumField;
            }
            set {
                if ((this.ReqNumField.Equals(value) != true)) {
                    this.ReqNumField = value;
                    this.RaisePropertyChanged("ReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqHeadRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqHeadRow : Erp.Custom.Core.Session.Epicor.ReqSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CPDispatcherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDispatcherCurMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDispatcherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDispatcherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MemoAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextDispatcherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextDispatcherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyUponReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OkToBuyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrcConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplyOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqActionIDReqActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestorIDCurMenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestorIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ToDoFlagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrList {
            get {
                return this.AddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrListField, value) != true)) {
                    this.AddrListField = value;
                    this.RaisePropertyChanged("AddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPDispatcherID {
            get {
                return this.CPDispatcherIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CPDispatcherIDField, value) != true)) {
                    this.CPDispatcherIDField = value;
                    this.RaisePropertyChanged("CPDispatcherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDispatcherCurMenuID {
            get {
                return this.CurrDispatcherCurMenuIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDispatcherCurMenuIDField, value) != true)) {
                    this.CurrDispatcherCurMenuIDField = value;
                    this.RaisePropertyChanged("CurrDispatcherCurMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDispatcherID {
            get {
                return this.CurrDispatcherIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDispatcherIDField, value) != true)) {
                    this.CurrDispatcherIDField = value;
                    this.RaisePropertyChanged("CurrDispatcherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDispatcherName {
            get {
                return this.CurrDispatcherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDispatcherNameField, value) != true)) {
                    this.CurrDispatcherNameField = value;
                    this.RaisePropertyChanged("CurrDispatcherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbReqNum {
            get {
                return this.GlbReqNumField;
            }
            set {
                if ((this.GlbReqNumField.Equals(value) != true)) {
                    this.GlbReqNumField = value;
                    this.RaisePropertyChanged("GlbReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockLines {
            get {
                return this.LockLinesField;
            }
            set {
                if ((this.LockLinesField.Equals(value) != true)) {
                    this.LockLinesField = value;
                    this.RaisePropertyChanged("LockLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MemoAvailable {
            get {
                return this.MemoAvailableField;
            }
            set {
                if ((this.MemoAvailableField.Equals(value) != true)) {
                    this.MemoAvailableField = value;
                    this.RaisePropertyChanged("MemoAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextActionDesc {
            get {
                return this.NextActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.NextActionDescField, value) != true)) {
                    this.NextActionDescField = value;
                    this.RaisePropertyChanged("NextActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextActionID {
            get {
                return this.NextActionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NextActionIDField, value) != true)) {
                    this.NextActionIDField = value;
                    this.RaisePropertyChanged("NextActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextDispatcherID {
            get {
                return this.NextDispatcherIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NextDispatcherIDField, value) != true)) {
                    this.NextDispatcherIDField = value;
                    this.RaisePropertyChanged("NextDispatcherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextDispatcherName {
            get {
                return this.NextDispatcherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NextDispatcherNameField, value) != true)) {
                    this.NextDispatcherNameField = value;
                    this.RaisePropertyChanged("NextDispatcherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextNote {
            get {
                return this.NextNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NextNoteField, value) != true)) {
                    this.NextNoteField = value;
                    this.RaisePropertyChanged("NextNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyUponReceipt {
            get {
                return this.NotifyUponReceiptField;
            }
            set {
                if ((this.NotifyUponReceiptField.Equals(value) != true)) {
                    this.NotifyUponReceiptField = value;
                    this.RaisePropertyChanged("NotifyUponReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OkToBuy {
            get {
                return this.OkToBuyField;
            }
            set {
                if ((this.OkToBuyField.Equals(value) != true)) {
                    this.OkToBuyField = value;
                    this.RaisePropertyChanged("OkToBuy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenReq {
            get {
                return this.OpenReqField;
            }
            set {
                if ((this.OpenReqField.Equals(value) != true)) {
                    this.OpenReqField = value;
                    this.RaisePropertyChanged("OpenReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrcConNum {
            get {
                return this.PrcConNumField;
            }
            set {
                if ((this.PrcConNumField.Equals(value) != true)) {
                    this.PrcConNumField = value;
                    this.RaisePropertyChanged("PrcConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplyOption {
            get {
                return this.ReplyOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplyOptionField, value) != true)) {
                    this.ReplyOptionField = value;
                    this.RaisePropertyChanged("ReplyOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqActionID {
            get {
                return this.ReqActionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqActionIDField, value) != true)) {
                    this.ReqActionIDField = value;
                    this.RaisePropertyChanged("ReqActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqActionIDReqActionDesc {
            get {
                return this.ReqActionIDReqActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqActionIDReqActionDescField, value) != true)) {
                    this.ReqActionIDReqActionDescField = value;
                    this.RaisePropertyChanged("ReqActionIDReqActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNum {
            get {
                return this.ReqNumField;
            }
            set {
                if ((this.ReqNumField.Equals(value) != true)) {
                    this.ReqNumField = value;
                    this.RaisePropertyChanged("ReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqUserId {
            get {
                return this.ReqUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqUserIdField, value) != true)) {
                    this.ReqUserIdField = value;
                    this.RaisePropertyChanged("ReqUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestorID {
            get {
                return this.RequestorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestorIDField, value) != true)) {
                    this.RequestorIDField = value;
                    this.RaisePropertyChanged("RequestorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestorIDCurMenuID {
            get {
                return this.RequestorIDCurMenuIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestorIDCurMenuIDField, value) != true)) {
                    this.RequestorIDCurMenuIDField = value;
                    this.RaisePropertyChanged("RequestorIDCurMenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestorIDName {
            get {
                return this.RequestorIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestorIDNameField, value) != true)) {
                    this.RequestorIDNameField = value;
                    this.RaisePropertyChanged("RequestorIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress1 {
            get {
                return this.ShipAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress1Field, value) != true)) {
                    this.ShipAddress1Field = value;
                    this.RaisePropertyChanged("ShipAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress2 {
            get {
                return this.ShipAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress2Field, value) != true)) {
                    this.ShipAddress2Field = value;
                    this.RaisePropertyChanged("ShipAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress3 {
            get {
                return this.ShipAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddress3Field, value) != true)) {
                    this.ShipAddress3Field = value;
                    this.RaisePropertyChanged("ShipAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCity {
            get {
                return this.ShipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCityField, value) != true)) {
                    this.ShipCityField = value;
                    this.RaisePropertyChanged("ShipCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCountry {
            get {
                return this.ShipCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCountryField, value) != true)) {
                    this.ShipCountryField = value;
                    this.RaisePropertyChanged("ShipCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipCountryNum {
            get {
                return this.ShipCountryNumField;
            }
            set {
                if ((this.ShipCountryNumField.Equals(value) != true)) {
                    this.ShipCountryNumField = value;
                    this.RaisePropertyChanged("ShipCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipName {
            get {
                return this.ShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipNameField, value) != true)) {
                    this.ShipNameField = value;
                    this.RaisePropertyChanged("ShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipState {
            get {
                return this.ShipStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStateField, value) != true)) {
                    this.ShipStateField = value;
                    this.RaisePropertyChanged("ShipState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToConName {
            get {
                return this.ShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToConNameField, value) != true)) {
                    this.ShipToConNameField = value;
                    this.RaisePropertyChanged("ShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipZIP {
            get {
                return this.ShipZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipZIPField, value) != true)) {
                    this.ShipZIPField = value;
                    this.RaisePropertyChanged("ShipZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDesc {
            get {
                return this.StatusDescField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescField, value) != true)) {
                    this.StatusDescField = value;
                    this.RaisePropertyChanged("StatusDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusType {
            get {
                return this.StatusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeField, value) != true)) {
                    this.StatusTypeField = value;
                    this.RaisePropertyChanged("StatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToDoFlag {
            get {
                return this.ToDoFlagField;
            }
            set {
                if ((this.ToDoFlagField.Equals(value) != true)) {
                    this.ToDoFlagField = value;
                    this.RaisePropertyChanged("ToDoFlag");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqHeadAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqHeadAttchRow : Erp.Custom.Core.Session.Epicor.ReqSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNum {
            get {
                return this.ReqNumField;
            }
            set {
                if ((this.ReqNumField.Equals(value) != true)) {
                    this.ReqNumField = value;
                    this.RaisePropertyChanged("ReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReqLogRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReqLogRow : Erp.Custom.Core.Session.Epicor.ReqSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDispatcherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDispatcherNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrentActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispChgTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqActionIDReqActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqHeadNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqLogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqNumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqNumShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedByName {
            get {
                return this.ChangedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByNameField, value) != true)) {
                    this.ChangedByNameField = value;
                    this.RaisePropertyChanged("ChangedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDispatcherID {
            get {
                return this.CurrDispatcherIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDispatcherIDField, value) != true)) {
                    this.CurrDispatcherIDField = value;
                    this.RaisePropertyChanged("CurrDispatcherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDispatcherName {
            get {
                return this.CurrDispatcherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDispatcherNameField, value) != true)) {
                    this.CurrDispatcherNameField = value;
                    this.RaisePropertyChanged("CurrDispatcherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrentAction {
            get {
                return this.CurrentActionField;
            }
            set {
                if ((this.CurrentActionField.Equals(value) != true)) {
                    this.CurrentActionField = value;
                    this.RaisePropertyChanged("CurrentAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispChgTime {
            get {
                return this.DispChgTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispChgTimeField, value) != true)) {
                    this.DispChgTimeField = value;
                    this.RaisePropertyChanged("DispChgTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldActionID {
            get {
                return this.OldActionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OldActionIDField, value) != true)) {
                    this.OldActionIDField = value;
                    this.RaisePropertyChanged("OldActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqActionDesc {
            get {
                return this.ReqActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqActionDescField, value) != true)) {
                    this.ReqActionDescField = value;
                    this.RaisePropertyChanged("ReqActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqActionID {
            get {
                return this.ReqActionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqActionIDField, value) != true)) {
                    this.ReqActionIDField = value;
                    this.RaisePropertyChanged("ReqActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqActionIDReqActionDesc {
            get {
                return this.ReqActionIDReqActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqActionIDReqActionDescField, value) != true)) {
                    this.ReqActionIDReqActionDescField = value;
                    this.RaisePropertyChanged("ReqActionIDReqActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqHeadNote {
            get {
                return this.ReqHeadNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqHeadNoteField, value) != true)) {
                    this.ReqHeadNoteField = value;
                    this.RaisePropertyChanged("ReqHeadNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqLogType {
            get {
                return this.ReqLogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqLogTypeField, value) != true)) {
                    this.ReqLogTypeField = value;
                    this.RaisePropertyChanged("ReqLogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNum {
            get {
                return this.ReqNumField;
            }
            set {
                if ((this.ReqNumField.Equals(value) != true)) {
                    this.ReqNumField = value;
                    this.RaisePropertyChanged("ReqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqNumShipName {
            get {
                return this.ReqNumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqNumShipNameField, value) != true)) {
                    this.ReqNumShipNameField = value;
                    this.RaisePropertyChanged("ReqNumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqNumShipToConName {
            get {
                return this.ReqNumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqNumShipToConNameField, value) != true)) {
                    this.ReqNumShipToConNameField = value;
                    this.RaisePropertyChanged("ReqNumShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDesc {
            get {
                return this.StatusDescField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescField, value) != true)) {
                    this.StatusDescField = value;
                    this.RaisePropertyChanged("StatusDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusType {
            get {
                return this.StatusTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusTypeField, value) != true)) {
                    this.StatusTypeField = value;
                    this.RaisePropertyChanged("StatusType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : Erp.Custom.Core.Session.Epicor.ReqSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReqLogTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReqLogRow")]
    [System.SerializableAttribute()]
    public class ReqLogTable : System.Collections.Generic.List<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:Req", ConfigurationName="Epicor.ReqSvc.ReqSvcContract")]
    public interface ReqSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetNewReqHead", ReplyAction="Erp:BO:Req/ReqSvcContract/GetNewReqHeadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetNewReqHeadEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadResponse GetNewReqHead(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetNewReqHead", ReplyAction="Erp:BO:Req/ReqSvcContract/GetNewReqHeadResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadResponse> GetNewReqHeadAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetNewReqHeadAttch", ReplyAction="Erp:BO:Req/ReqSvcContract/GetNewReqHeadAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetNewReqHeadAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchResponse GetNewReqHeadAttch(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetNewReqHeadAttch", ReplyAction="Erp:BO:Req/ReqSvcContract/GetNewReqHeadAttchResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchResponse> GetNewReqHeadAttchAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetNewReqDetail", ReplyAction="Erp:BO:Req/ReqSvcContract/GetNewReqDetailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetNewReqDetailEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailResponse GetNewReqDetail(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetNewReqDetail", ReplyAction="Erp:BO:Req/ReqSvcContract/GetNewReqDetailResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailResponse> GetNewReqDetailAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetNewReqDetailAttch", ReplyAction="Erp:BO:Req/ReqSvcContract/GetNewReqDetailAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetNewReqDetailAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchResponse GetNewReqDetailAttch(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetNewReqDetailAttch", ReplyAction="Erp:BO:Req/ReqSvcContract/GetNewReqDetailAttchResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchResponse> GetNewReqDetailAttchAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/DeleteByID", ReplyAction="Erp:BO:Req/ReqSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(int reqNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/DeleteByID", ReplyAction="Erp:BO:Req/ReqSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(int reqNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetByID", ReplyAction="Erp:BO:Req/ReqSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetByID(int reqNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetByID", ReplyAction="Erp:BO:Req/ReqSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> GetByIDAsync(int reqNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetList", ReplyAction="Erp:BO:Req/ReqSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetListResponse GetList(Erp.Custom.Core.Session.Epicor.ReqSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetList", ReplyAction="Erp:BO:Req/ReqSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetListResponse> GetListAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetRows", ReplyAction="Erp:BO:Req/ReqSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsResponse GetRows(Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetRows", ReplyAction="Erp:BO:Req/ReqSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsResponse> GetRowsAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetBySysRowID", ReplyAction="Erp:BO:Req/ReqSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetBySysRowID", ReplyAction="Erp:BO:Req/ReqSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:Req/ReqSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:Req/ReqSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/Update", ReplyAction="Erp:BO:Req/ReqSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateResponse Update(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/Update", ReplyAction="Erp:BO:Req/ReqSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateResponse> UpdateAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/UpdateExt", ReplyAction="Erp:BO:Req/ReqSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtResponse UpdateExt(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/UpdateExt", ReplyAction="Erp:BO:Req/ReqSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtResponse> UpdateExtAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/BuildNextDispatcher", ReplyAction="Erp:BO:Req/ReqSvcContract/BuildNextDispatcherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/BuildNextDispatcherEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherResponse BuildNextDispatcher(Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/BuildNextDispatcher", ReplyAction="Erp:BO:Req/ReqSvcContract/BuildNextDispatcherResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherResponse> BuildNextDispatcherAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetCodeDescList", ReplyAction="Erp:BO:Req/ReqSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetCodeDescList", ReplyAction="Erp:BO:Req/ReqSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CheckJobNum", ReplyAction="Erp:BO:Req/ReqSvcContract/CheckJobNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/CheckJobNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckJobNum(string jobNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CheckJobNum", ReplyAction="Erp:BO:Req/ReqSvcContract/CheckJobNumResponse")]
        System.Threading.Tasks.Task CheckJobNumAsync(string jobNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CheckPartStatus", ReplyAction="Erp:BO:Req/ReqSvcContract/CheckPartStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/CheckPartStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusResponse CheckPartStatus(Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CheckPartStatus", ReplyAction="Erp:BO:Req/ReqSvcContract/CheckPartStatusResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusResponse> CheckPartStatusAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CloseRequisition", ReplyAction="Erp:BO:Req/ReqSvcContract/CloseRequisitionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/CloseRequisitionEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset CloseRequisition(int reqNum, string reqUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CloseRequisition", ReplyAction="Erp:BO:Req/ReqSvcContract/CloseRequisitionResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> CloseRequisitionAsync(int reqNum, string reqUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/DeleteReqLog", ReplyAction="Erp:BO:Req/ReqSvcContract/DeleteReqLogResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/DeleteReqLogEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteReqLog(int reqNum, System.Nullable<System.DateTime> changeDate, int changeTime, string reqLogType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/DeleteReqLog", ReplyAction="Erp:BO:Req/ReqSvcContract/DeleteReqLogResponse")]
        System.Threading.Tasks.Task DeleteReqLogAsync(int reqNum, System.Nullable<System.DateTime> changeDate, int changeTime, string reqLogType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetCostInfo", ReplyAction="Erp:BO:Req/ReqSvcContract/GetCostInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetCostInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoResponse GetCostInfo(Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetCostInfo", ReplyAction="Erp:BO:Req/ReqSvcContract/GetCostInfoResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoResponse> GetCostInfoAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetExchangeRate", ReplyAction="Erp:BO:Req/ReqSvcContract/GetExchangeRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetExchangeRateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateResponse GetExchangeRate(Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetExchangeRate", ReplyAction="Erp:BO:Req/ReqSvcContract/GetExchangeRateResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateResponse> GetExchangeRateAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetPartCrossRef", ReplyAction="Erp:BO:Req/ReqSvcContract/GetPartCrossRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetPartCrossRefEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefResponse GetPartCrossRef(Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetPartCrossRef", ReplyAction="Erp:BO:Req/ReqSvcContract/GetPartCrossRefResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefResponse> GetPartCrossRefAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetPartInfo", ReplyAction="Erp:BO:Req/ReqSvcContract/GetPartInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetPartInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoResponse GetPartInfo(Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetPartInfo", ReplyAction="Erp:BO:Req/ReqSvcContract/GetPartInfoResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoResponse> GetPartInfoAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetQtyInfo", ReplyAction="Erp:BO:Req/ReqSvcContract/GetQtyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetQtyInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoResponse GetQtyInfo(Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetQtyInfo", ReplyAction="Erp:BO:Req/ReqSvcContract/GetQtyInfoResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoResponse> GetQtyInfoAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetReqLogList", ReplyAction="Erp:BO:Req/ReqSvcContract/GetReqLogListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetReqLogListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListResponse GetReqLogList(Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetReqLogList", ReplyAction="Erp:BO:Req/ReqSvcContract/GetReqLogListResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListResponse> GetReqLogListAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetVendorInfo", ReplyAction="Erp:BO:Req/ReqSvcContract/GetVendorInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/GetVendorInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoResponse GetVendorInfo(Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/GetVendorInfo", ReplyAction="Erp:BO:Req/ReqSvcContract/GetVendorInfoResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoResponse> GetVendorInfoAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/RDMenuFlags", ReplyAction="Erp:BO:Req/ReqSvcContract/RDMenuFlagsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/RDMenuFlagsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsResponse RDMenuFlags(Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/RDMenuFlags", ReplyAction="Erp:BO:Req/ReqSvcContract/RDMenuFlagsResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsResponse> RDMenuFlagsAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/ResetDispatching", ReplyAction="Erp:BO:Req/ReqSvcContract/ResetDispatchingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/ResetDispatchingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ResetDispatching(int reqNum, string reqUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/ResetDispatching", ReplyAction="Erp:BO:Req/ReqSvcContract/ResetDispatchingResponse")]
        System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> ResetDispatchingAsync(int reqNum, string reqUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CheckLine", ReplyAction="Erp:BO:Req/ReqSvcContract/CheckLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/CheckLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool CheckLine();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CheckLine", ReplyAction="Erp:BO:Req/ReqSvcContract/CheckLineResponse")]
        System.Threading.Tasks.Task<bool> CheckLineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CheckToDo", ReplyAction="Erp:BO:Req/ReqSvcContract/CheckToDoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Erp.Custom.Core.Session.Epicor.ReqSvc.EpicorFaultDetail), Action="Erp:BO:Req/ReqSvcContract/CheckToDoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool CheckToDo(string dispatchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Req/ReqSvcContract/CheckToDo", ReplyAction="Erp:BO:Req/ReqSvcContract/CheckToDoResponse")]
        System.Threading.Tasks.Task<bool> CheckToDoAsync(string dispatchId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReqHead", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetNewReqHeadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetNewReqHeadRequest() {
        }
        
        public GetNewReqHeadRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReqHeadResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetNewReqHeadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetNewReqHeadResponse() {
        }
        
        public GetNewReqHeadResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReqHeadAttch", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetNewReqHeadAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public int reqNum;
        
        public GetNewReqHeadAttchRequest() {
        }
        
        public GetNewReqHeadAttchRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, int reqNum) {
            this.ds = ds;
            this.reqNum = reqNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReqHeadAttchResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetNewReqHeadAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetNewReqHeadAttchResponse() {
        }
        
        public GetNewReqHeadAttchResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReqDetail", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetNewReqDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public int reqNum;
        
        public GetNewReqDetailRequest() {
        }
        
        public GetNewReqDetailRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, int reqNum) {
            this.ds = ds;
            this.reqNum = reqNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReqDetailResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetNewReqDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetNewReqDetailResponse() {
        }
        
        public GetNewReqDetailResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReqDetailAttch", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetNewReqDetailAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public int reqNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public int reqLine;
        
        public GetNewReqDetailAttchRequest() {
        }
        
        public GetNewReqDetailAttchRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, int reqNum, int reqLine) {
            this.ds = ds;
            this.reqNum = reqNum;
            this.reqLine = reqLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReqDetailAttchResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetNewReqDetailAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetNewReqDetailAttchResponse() {
        }
        
        public GetNewReqDetailAttchResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public string whereClauseReqHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public string whereClauseReqHeadAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public string whereClauseReqDetail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=3)]
        public string whereClauseReqDetailAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=4)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=5)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(string whereClauseReqHead, string whereClauseReqHeadAttch, string whereClauseReqDetail, string whereClauseReqDetailAttch, int pageSize, int absolutePage) {
            this.whereClauseReqHead = whereClauseReqHead;
            this.whereClauseReqHeadAttch = whereClauseReqHeadAttch;
            this.whereClauseReqDetail = whereClauseReqDetail;
            this.whereClauseReqDetailAttch = whereClauseReqDetailAttch;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.UpdExtReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdExtReqTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.UpdExtReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorTableset UpdateExtResult, Erp.Custom.Core.Session.Epicor.ReqSvc.UpdExtReqTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BuildNextDispatcher", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class BuildNextDispatcherRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public string nextActionID;
        
        public BuildNextDispatcherRequest() {
        }
        
        public BuildNextDispatcherRequest(string nextActionID) {
            this.nextActionID = nextActionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BuildNextDispatcherResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class BuildNextDispatcherResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public string dispIDList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public string dispNmList;
        
        public BuildNextDispatcherResponse() {
        }
        
        public BuildNextDispatcherResponse(string dispIDList, string dispNmList) {
            this.dispIDList = dispIDList;
            this.dispNmList = dispNmList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPartStatus", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class CheckPartStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public string partNum;
        
        public CheckPartStatusRequest() {
        }
        
        public CheckPartStatusRequest(string partNum) {
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPartStatusResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class CheckPartStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public string vMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public bool vSubAvail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=3)]
        public string vMsgType;
        
        public CheckPartStatusResponse() {
        }
        
        public CheckPartStatusResponse(string partNum, string vMessage, bool vSubAvail, string vMsgType) {
            this.partNum = partNum;
            this.vMessage = vMessage;
            this.vSubAvail = vSubAvail;
            this.vMsgType = vMsgType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCostInfo", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetCostInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetCostInfoRequest() {
        }
        
        public GetCostInfoRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCostInfoResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetCostInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetCostInfoResponse() {
        }
        
        public GetCostInfoResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExchangeRate", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetExchangeRateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public System.Nullable<System.DateTime> reqDate;
        
        public GetExchangeRateRequest() {
        }
        
        public GetExchangeRateRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, System.Nullable<System.DateTime> reqDate) {
            this.ds = ds;
            this.reqDate = reqDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExchangeRateResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetExchangeRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetExchangeRateResponse() {
        }
        
        public GetExchangeRateResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartCrossRef", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetPartCrossRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public int reqLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=3)]
        public string uomCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=4)]
        public System.Guid SysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=5)]
        public string rowType;
        
        public GetPartCrossRefRequest() {
        }
        
        public GetPartCrossRefRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, int reqLine, string partNum, string uomCode, System.Guid SysRowID, string rowType) {
            this.ds = ds;
            this.reqLine = reqLine;
            this.partNum = partNum;
            this.uomCode = uomCode;
            this.SysRowID = SysRowID;
            this.rowType = rowType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartCrossRefResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetPartCrossRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public string uomCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=3)]
        public bool multipleMatch;
        
        public GetPartCrossRefResponse() {
        }
        
        public GetPartCrossRefResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, string partNum, string uomCode, bool multipleMatch) {
            this.ds = ds;
            this.partNum = partNum;
            this.uomCode = uomCode;
            this.multipleMatch = multipleMatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartInfo", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetPartInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public string uomCode;
        
        public GetPartInfoRequest() {
        }
        
        public GetPartInfoRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, string uomCode) {
            this.ds = ds;
            this.uomCode = uomCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartInfoResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetPartInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetPartInfoResponse() {
        }
        
        public GetPartInfoResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQtyInfo", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetQtyInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public string fieldName;
        
        public GetQtyInfoRequest() {
        }
        
        public GetQtyInfoRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, string fieldName) {
            this.ds = ds;
            this.fieldName = fieldName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQtyInfoResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetQtyInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetQtyInfoResponse() {
        }
        
        public GetQtyInfoResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReqLogList", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetReqLogListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=2)]
        public int absolutePage;
        
        public GetReqLogListRequest() {
        }
        
        public GetReqLogListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReqLogListResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetReqLogListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogTableset GetReqLogListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public bool morePages;
        
        public GetReqLogListResponse() {
        }
        
        public GetReqLogListResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogTableset GetReqLogListResult, bool morePages) {
            this.GetReqLogListResult = GetReqLogListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVendorInfo", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetVendorInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetVendorInfoRequest() {
        }
        
        public GetVendorInfoRequest(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVendorInfoResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class GetVendorInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds;
        
        public GetVendorInfoResponse() {
        }
        
        public GetVendorInfoResponse(Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RDMenuFlags", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class RDMenuFlagsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public int reqNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public string reqUserId;
        
        public RDMenuFlagsRequest() {
        }
        
        public RDMenuFlagsRequest(int reqNum, string reqUserId) {
            this.reqNum = reqNum;
            this.reqUserId = reqUserId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RDMenuFlagsResponse", WrapperNamespace="Erp:BO:Req", IsWrapped=true)]
    public partial class RDMenuFlagsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=0)]
        public bool resetDispatch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Req", Order=1)]
        public bool dispatchReq;
        
        public RDMenuFlagsResponse() {
        }
        
        public RDMenuFlagsResponse(bool resetDispatch, bool dispatchReq) {
            this.resetDispatch = resetDispatch;
            this.dispatchReq = dispatchReq;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReqSvcContractChannel : Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReqSvcContractClient : System.ServiceModel.ClientBase<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract>, Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract {
        
        public ReqSvcContractClient() {
        }
        
        public ReqSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReqSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReqSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReqSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetNewReqHead(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadRequest request) {
            return base.Channel.GetNewReqHead(request);
        }
        
        public void GetNewReqHead(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadRequest();
            inValue.ds = ds;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetNewReqHead(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadResponse> GetNewReqHeadAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadRequest request) {
            return base.Channel.GetNewReqHeadAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetNewReqHeadAttch(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchRequest request) {
            return base.Channel.GetNewReqHeadAttch(request);
        }
        
        public void GetNewReqHeadAttch(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, int reqNum) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchRequest();
            inValue.ds = ds;
            inValue.reqNum = reqNum;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetNewReqHeadAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchResponse> GetNewReqHeadAttchAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqHeadAttchRequest request) {
            return base.Channel.GetNewReqHeadAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetNewReqDetail(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailRequest request) {
            return base.Channel.GetNewReqDetail(request);
        }
        
        public void GetNewReqDetail(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, int reqNum) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailRequest();
            inValue.ds = ds;
            inValue.reqNum = reqNum;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetNewReqDetail(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailResponse> GetNewReqDetailAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailRequest request) {
            return base.Channel.GetNewReqDetailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetNewReqDetailAttch(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchRequest request) {
            return base.Channel.GetNewReqDetailAttch(request);
        }
        
        public void GetNewReqDetailAttch(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, int reqNum, int reqLine) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchRequest();
            inValue.ds = ds;
            inValue.reqNum = reqNum;
            inValue.reqLine = reqLine;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetNewReqDetailAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchResponse> GetNewReqDetailAttchAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetNewReqDetailAttchRequest request) {
            return base.Channel.GetNewReqDetailAttchAsync(request);
        }
        
        public void DeleteByID(int reqNum) {
            base.Channel.DeleteByID(reqNum);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(int reqNum) {
            return base.Channel.DeleteByIDAsync(reqNum);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetByID(int reqNum) {
            return base.Channel.GetByID(reqNum);
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> GetByIDAsync(int reqNum) {
            return base.Channel.GetByIDAsync(reqNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetListResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetList(Erp.Custom.Core.Session.Epicor.ReqSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqHeadListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetListRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetListResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetListResponse> GetListAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetRows(Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetRows(string whereClauseReqHead, string whereClauseReqHeadAttch, string whereClauseReqDetail, string whereClauseReqDetailAttch, int pageSize, int absolutePage, out bool morePages) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsRequest();
            inValue.whereClauseReqHead = whereClauseReqHead;
            inValue.whereClauseReqHeadAttch = whereClauseReqHeadAttch;
            inValue.whereClauseReqDetail = whereClauseReqDetail;
            inValue.whereClauseReqDetailAttch = whereClauseReqDetailAttch;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsResponse> GetRowsAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.Update(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateRequest();
            inValue.ds = ds;
            Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateResponse> UpdateAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.UpdateExt(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.BOUpdErrorTableset UpdateExt(ref Erp.Custom.Core.Session.Epicor.ReqSvc.UpdExtReqTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtResponse> UpdateExtAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.BuildNextDispatcher(Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherRequest request) {
            return base.Channel.BuildNextDispatcher(request);
        }
        
        public string BuildNextDispatcher(string nextActionID, out string dispNmList) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherRequest();
            inValue.nextActionID = nextActionID;
            Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).BuildNextDispatcher(inValue);
            dispNmList = retVal.dispNmList;
            return retVal.dispIDList;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherResponse> BuildNextDispatcherAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.BuildNextDispatcherRequest request) {
            return base.Channel.BuildNextDispatcherAsync(request);
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        public void CheckJobNum(string jobNum) {
            base.Channel.CheckJobNum(jobNum);
        }
        
        public System.Threading.Tasks.Task CheckJobNumAsync(string jobNum) {
            return base.Channel.CheckJobNumAsync(jobNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.CheckPartStatus(Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusRequest request) {
            return base.Channel.CheckPartStatus(request);
        }
        
        public string CheckPartStatus(ref string partNum, out bool vSubAvail, out string vMsgType) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusRequest();
            inValue.partNum = partNum;
            Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).CheckPartStatus(inValue);
            partNum = retVal.partNum;
            vSubAvail = retVal.vSubAvail;
            vMsgType = retVal.vMsgType;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusResponse> CheckPartStatusAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.CheckPartStatusRequest request) {
            return base.Channel.CheckPartStatusAsync(request);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset CloseRequisition(int reqNum, string reqUserId) {
            return base.Channel.CloseRequisition(reqNum, reqUserId);
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> CloseRequisitionAsync(int reqNum, string reqUserId) {
            return base.Channel.CloseRequisitionAsync(reqNum, reqUserId);
        }
        
        public void DeleteReqLog(int reqNum, System.Nullable<System.DateTime> changeDate, int changeTime, string reqLogType) {
            base.Channel.DeleteReqLog(reqNum, changeDate, changeTime, reqLogType);
        }
        
        public System.Threading.Tasks.Task DeleteReqLogAsync(int reqNum, System.Nullable<System.DateTime> changeDate, int changeTime, string reqLogType) {
            return base.Channel.DeleteReqLogAsync(reqNum, changeDate, changeTime, reqLogType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetCostInfo(Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoRequest request) {
            return base.Channel.GetCostInfo(request);
        }
        
        public void GetCostInfo(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoRequest();
            inValue.ds = ds;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetCostInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoResponse> GetCostInfoAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetCostInfoRequest request) {
            return base.Channel.GetCostInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetExchangeRate(Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateRequest request) {
            return base.Channel.GetExchangeRate(request);
        }
        
        public void GetExchangeRate(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, System.Nullable<System.DateTime> reqDate) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateRequest();
            inValue.ds = ds;
            inValue.reqDate = reqDate;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetExchangeRate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateResponse> GetExchangeRateAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetExchangeRateRequest request) {
            return base.Channel.GetExchangeRateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetPartCrossRef(Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefRequest request) {
            return base.Channel.GetPartCrossRef(request);
        }
        
        public bool GetPartCrossRef(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, int reqLine, ref string partNum, ref string uomCode, System.Guid SysRowID, string rowType) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefRequest();
            inValue.ds = ds;
            inValue.reqLine = reqLine;
            inValue.partNum = partNum;
            inValue.uomCode = uomCode;
            inValue.SysRowID = SysRowID;
            inValue.rowType = rowType;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetPartCrossRef(inValue);
            ds = retVal.ds;
            partNum = retVal.partNum;
            uomCode = retVal.uomCode;
            return retVal.multipleMatch;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefResponse> GetPartCrossRefAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartCrossRefRequest request) {
            return base.Channel.GetPartCrossRefAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetPartInfo(Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoRequest request) {
            return base.Channel.GetPartInfo(request);
        }
        
        public void GetPartInfo(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, string uomCode) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoRequest();
            inValue.ds = ds;
            inValue.uomCode = uomCode;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetPartInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoResponse> GetPartInfoAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetPartInfoRequest request) {
            return base.Channel.GetPartInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetQtyInfo(Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoRequest request) {
            return base.Channel.GetQtyInfo(request);
        }
        
        public void GetQtyInfo(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds, string fieldName) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoRequest();
            inValue.ds = ds;
            inValue.fieldName = fieldName;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetQtyInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoResponse> GetQtyInfoAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetQtyInfoRequest request) {
            return base.Channel.GetQtyInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetReqLogList(Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListRequest request) {
            return base.Channel.GetReqLogList(request);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqLogTableset GetReqLogList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetReqLogList(inValue);
            morePages = retVal.morePages;
            return retVal.GetReqLogListResult;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListResponse> GetReqLogListAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetReqLogListRequest request) {
            return base.Channel.GetReqLogListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.GetVendorInfo(Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoRequest request) {
            return base.Channel.GetVendorInfo(request);
        }
        
        public void GetVendorInfo(ref Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ds) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoRequest();
            inValue.ds = ds;
            Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).GetVendorInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoResponse> GetVendorInfoAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.GetVendorInfoRequest request) {
            return base.Channel.GetVendorInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsResponse Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract.RDMenuFlags(Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsRequest request) {
            return base.Channel.RDMenuFlags(request);
        }
        
        public bool RDMenuFlags(int reqNum, string reqUserId, out bool dispatchReq) {
            Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsRequest inValue = new Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsRequest();
            inValue.reqNum = reqNum;
            inValue.reqUserId = reqUserId;
            Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsResponse retVal = ((Erp.Custom.Core.Session.Epicor.ReqSvc.ReqSvcContract)(this)).RDMenuFlags(inValue);
            dispatchReq = retVal.dispatchReq;
            return retVal.resetDispatch;
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsResponse> RDMenuFlagsAsync(Erp.Custom.Core.Session.Epicor.ReqSvc.RDMenuFlagsRequest request) {
            return base.Channel.RDMenuFlagsAsync(request);
        }
        
        public Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset ResetDispatching(int reqNum, string reqUserId) {
            return base.Channel.ResetDispatching(reqNum, reqUserId);
        }
        
        public System.Threading.Tasks.Task<Erp.Custom.Core.Session.Epicor.ReqSvc.ReqTableset> ResetDispatchingAsync(int reqNum, string reqUserId) {
            return base.Channel.ResetDispatchingAsync(reqNum, reqUserId);
        }
        
        public bool CheckLine() {
            return base.Channel.CheckLine();
        }
        
        public System.Threading.Tasks.Task<bool> CheckLineAsync() {
            return base.Channel.CheckLineAsync();
        }
        
        public bool CheckToDo(string dispatchId) {
            return base.Channel.CheckToDo(dispatchId);
        }
        
        public System.Threading.Tasks.Task<bool> CheckToDoAsync(string dispatchId) {
            return base.Channel.CheckToDoAsync(dispatchId);
        }
    }
}
